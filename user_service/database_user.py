from flask_sqlalchemy import SQLAlchemy

# Define mysql database connection string
DATABASE_URI = "mysql+pymysql://root:@localhost/soen487project"

# Initialize SQLAlchemy with no settings
db = SQLAlchemy()


# mysql-> user table
class User(db.Model):
    """
      id: auto-increment id
      public_id: an unique id to locate a user, the value will be generated by the auth service
      fname: first name
      lname: last name
      birthday: user birthday that is used to calculate the user's age
      email: unique user email
      phone: user's phone number
      address: user's address which can be null
    """
    id = db.Column(db.Integer, primary_key=True, autoincrement=True)
    public_id = db.Column(db.String(50), unique=True)
    fname = db.Column(db.String(100), nullable=False)
    lname = db.Column(db.String(100), nullable=False)
    birthday = db.Column(db.DateTime, nullable=False)
    email = db.Column(db.String(100), nullable=False)
    phone = db.Column(db.String(100), nullable=False)
    address = db.Column(db.Text(), nullable=True)

    def __repr__(self):
        return "<User {}: {}: {}: {}: {}: {}: {}: {}>".format(self.id, self.public_id, self.fname,
                                                              self.lname, self.birthday, self.email,
                                                              self.phone, self.address)


# Function that convert row to dictionary form
def row2dict(row):
    return {col.name: str(getattr(row, col.name)) for col in row.__table__.columns}



